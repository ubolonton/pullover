#!/usr/bin/env bash

set -eu
set -o pipefail

# Use Emacs by default. TODO: Don't assume MacPorts.
export EDITOR=${EDITOR:-"/opt/local/bin/emacsclient -a '' -c --display=ns"}
# Otherwise pbcopy/pbpaste use C coding.
export LANG=en_US.UTF-8

# Fail early, but clean up upon failure.
trap cleanup EXIT ERR INT TERM

# TODO: Clean up clipboard after we are done.
cleanup() {
    if [ -d "$TMP_DIR" ]; then
        rm -rf "$TMP_DIR"
    fi
}

# TODO: Find a better way to get process/app.
get-current-app() {
    osascript - <<EOF
tell application "System Events"
     name of first application process whose frontmost is true
end tell
EOF
}

# TODO: Find a better way to wait for completion, instead of a fixed delay.
copy-text() {
    local APP=$1
    osascript - <<EOF
tell application "System Events" to tell process "$APP"
     tell menu 1 of menu bar item "Edit" of menu bar 1
          click menu item "Select All"
          click menu item "Copy"
     end tell
end tell
delay 0.8
EOF
}

# FIX: This doesn't work with Reddit, among other things, where the editor loses focus on app
# switching.
# TODO: App name and process name can be different, right?
paste-text() {
    local APP=$1
    osascript - <<EOF
activate application "$APP"
tell application "System Events" to tell process "$APP"
     tell menu 1 of menu bar item "Edit" of menu bar 1
          click menu item "Select All"
          click menu item "Paste"
     end tell
end tell
delay 0.
EOF
}

# TODO
tmp-dir() {
    mktemp -d /tmp/edit-externally.XXXXXX
}

copy-to-temp-file() {
    local TMP_NAME=$1
    local APP=$2
    copy-text "$APP"
    pbpaste > "$TMP_NAME"
}

copy-from-temp-file() {
    local TMP_NAME=$1
    local APP=$2
    pbcopy < "$TMP_NAME"
    paste-text "$APP"
}

TMP_DIR=$(tmp-dir)
APP=$(get-current-app)
# TODO: Use a better name for the temp file.
TMP_NAME="${TMP_DIR}/${APP}.md"

# TODO: Handle empty texts.

copy-to-temp-file "$TMP_NAME" "$APP"

$EDITOR "$TMP_NAME"

copy-from-temp-file "$TMP_NAME" "$APP"
